<!-- livebook:{"app_settings":{"auto_shutdown_ms":3600000,"show_source":true,"slug":"sescapi"}} -->

# SescAPI notebook

```elixir
# Mix.install([
#       {:ex_utils, "~> 0.1.7"},
#       {:plug, "~> 1.0"},
#       {:req, "~> 0.5.0"},
#       {:kino, "~> 0.12.0"},
#       {:sescapi, path: "/Users/vitorcalejuri/Projects/sescapi"}
# ])

import IEx.Helpers
import Kino
import Kino.Shorts
recompile()
```

## Activity listing

First lets fetch all activities from Sesc using `SescAPI.Activities`

```elixir
import SescAPI.Activities

# {%{"atividade" => activities}, _} = Code.eval_file("test/fixtures/activities.exs")
activities = SescAPI.Activities.filter(categoria: "musica-show", ppp: 1000)
#File.write("/Users/vitorcalejuri/Projects/sescapi/test/fixtures/musica-show.json",Jason.encode!(activities))
```

```elixir
Enum.filter(activities, fn act -> String.match?(act.titulo, ~r/Hermeto/) end )
```

We must transform the data into a list of events, to be processed by the calendar component below.

```elixir

defmodule CalendarEvents do
  def event(activity) do
    %{
      id: activity.id,
      title: activity.titulo,
      desc: activity.complemento,
      unit: hd(activity.unidade)[:name],
      start: activity.dataPrimeiraSessao,
      end: activity.dataUltimaSessao
    }
  end
end

events = Enum.map(activities, &CalendarEvents.event/1)
tree(events)
```

## Calendar

```elixir
import IEx.Helpers

recompile()
Assets.Calendar.new(events)
```

<!-- livebook:{"branch_parent_index":1} -->

## Misc

```elixir
tree(activities)
```

<!-- livebook:{"offset":1543,"stamp":{"token":"XCP.NSLXwauX5srU0IwPdjpfjyFgHzh5HroAQJJw6fkEJ6OAr4VK1Q8NtHmUf3ZdcYVRiNIpRnLrj5HKTyZtOiijuhVuHpVLrL1jbcG0M_BqEB7UfAjZgLti-FA2","version":2}} -->
