# SescAPI notebook

```elixir
import IEx.Helpers
import Kino
import Kino.Shorts
import ExUtils.Map
```

## Activity listing

```elixir
recompile()
import SescAPI.Activities
alias SescAPI.Activities

# {%{"atividade" => activities}, _} = Code.eval_file("test/fixtures/activities.exs")
activities = Activities.filter(categoria: "musica-show", ppp: 1000)
```

We must transform the data into a list of events, to be processed by the calendar component below.

```elixir
recompile()

defmodule CalendarEvents do
  def event(activity) do
    %{
      id: activity.id,
      title: activity.titulo,
      desc: activity.complemento,
      unit: hd(activity.unidade)[:name],
      start: activity.dataProxSessao,
      end: activity.dataProxSessao
    }
  end
end

events = Enum.map(activities, &CalendarEvents.event/1)
tree(events)
```

```elixir
recompile()
Assets.Calendar.new(events)
```
